@using System.ComponentModel
@using AntDesign.TableModels

<Table @ref="table"
       TItem="EmployeeSkillView"
       DataSource="@pageList"
       Total="@Total"
       PageIndex="@PageIndex"
       PageSize="@PageSize"
        OnChange="OnChange"
       Size="TableSize.Small"
       RowKey="x=>x.SkillID">
    <Selection Key="@(context.SkillID.ToString())" />
    <PropertyColumn Title="Skill" Property="c=>c.Skill" Width="150" Align="@columnAlign" />
    <PropertyColumn Title="Level" Property="c=>c.Level" Width="350" Align="@columnAlign">
        <RadioGroup @bind-Value="@context.Level">
            <Radio Value="1">Novice</Radio>
            <Radio Value="2">Proficient</Radio>
            <Radio Value="3">Expert</Radio>
        </RadioGroup>
    </PropertyColumn>
    <PropertyColumn Title="YOE" Property="c=>c.YearsOfExperience" Align="@columnAlign">
        <Input Type="number" Placeholder="0" @bind-Value="@context.YearsOfExperience" />
     </PropertyColumn>
    <PropertyColumn Title="Hourly Wage" Property="c=>c.HourlyWage" Align="@columnAlign">
        <Input Type="number" Placeholder="0" @bind-Value="@context.HourlyWage" />
    </PropertyColumn>
</Table>
@using System.Text.Json;
@using BlazorApp.Data;
@code {

    [Parameter]
    public List<EmployeeSkillView> skillList { get; set; }

    public List<EmployeeSkillView> pageList { get; set; }


    public int PageIndex { get; set; } = 1;

    public int PageSize { get; set; } = 10;

    public int Total { get; set; }

    ColumnAlign columnAlign = ColumnAlign.Left;

    IEnumerable<EmployeeSkillView> selectedRows;

    ITable table;

    protected override async Task OnInitializedAsync()
    {
        pageList = this.HandlePageChange(PageIndex, PageSize);
        Total = skillList.Count();
    }

    public async Task OnChange(QueryModel<EmployeeSkillView> queryModel)
    {
        PageIndex = queryModel.PageIndex;
        PageSize = queryModel.PageSize;
        pageList = this.HandlePageChange(PageIndex, PageSize);
    }
    private List<EmployeeSkillView>  HandlePageChange(int pageIndex, int pageSize)
    {
        // Assuming pageIndex starts from 1
        int startIndex = (pageIndex - 1) * pageSize;

        // Ensure startIndex is within the bounds of the skillList
        startIndex = Math.Max(0, Math.Min(startIndex, skillList.Count - 1));

        // Take pageSize items starting from startIndex
        List<EmployeeSkillView> paginatedList = skillList.Skip(startIndex).Take(pageSize).ToList();

        return paginatedList;
    }
}


